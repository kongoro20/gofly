name: Restart Codespace
on:
  repository_dispatch:
    types: [restart-codespace]
jobs:
  restart:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
          echo "GitHub CLI version:"
          gh --version
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.CODESPACE_PAT }}" | gh auth login --with-token
          gh auth status
      - name: Check API Rate Limit
        run: |
          RATE_LIMIT=$(gh api /rate_limit --jq '.resources.core.remaining')
          echo "API rate limit remaining: $RATE_LIMIT"
          if [ "$RATE_LIMIT" -lt 10 ]; then
            echo "Rate limit too low. Waiting 300 seconds before proceeding..."
            sleep 300
          fi
      - name: Attempt to Restart Codespace
        env:
          CODESPACE_NAME: ${{ github.event.client_payload.codespace_name }}
        run: |
          MAX_ATTEMPTS=15
          ATTEMPT=1
          until [ $ATTEMPT -gt $MAX_ATTEMPTS ]; do
            echo "Attempt $ATTEMPT of $MAX_ATTEMPTS to restart Codespace $CODESPACE_NAME at $(date -u '+%Y-%m-%d %H:%M:%S UTC')..."

            # Step 1: Ensure Codespace is Stopped
            echo "Checking Codespace $CODESPACE_NAME state..."
            TIMEOUT_SECONDS=600
            POLL_INTERVAL=30
            ELAPSED=0
            while [ $ELAPSED -lt $TIMEOUT_SECONDS ]; do
              CODESPACE_DETAILS=$(gh api /user/codespaces/$CODESPACE_NAME --jq '{state: .state, name: .name}' 2>&1)
              CODESPACE_STATUS=$?
              if [ $CODESPACE_STATUS -ne 0 ]; then
                echo "Error fetching Codespace details: $CODESPACE_DETAILS"
                exit 1
              fi
              CODESPACE_STATE=$(echo "$CODESPACE_DETAILS" | jq -r '.state')
              echo "Codespace $CODESPACE_NAME is in state: $CODESPACE_STATE"
              if [ "$CODESPACE_STATE" = "Stopped" ] || [ "$CODESPACE_STATE" = "Shutdown" ]; then
                echo "Codespace is ready to restart."
                break
              fi
              if [ "$CODESPACE_STATE" = "Available" ]; then
                echo "Codespace is already Available. No restart needed."
                exit 0
              fi
              echo "Attempting to stop Codespace $CODESPACE_NAME..."
              STOP_OUTPUT=$(gh api -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                /user/codespaces/$CODESPACE_NAME/stop 2>&1)
              STOP_STATUS=$?
              if [ $STOP_STATUS -ne 0 ]; then
                echo "Failed to stop Codespace: $STOP_OUTPUT"
              fi
              echo "Waiting $POLL_INTERVAL seconds before checking again..."
              sleep $POLL_INTERVAL
              ELAPSED=$((ELAPSED + POLL_INTERVAL))
            done
            if [ $ELAPSED -ge $TIMEOUT_SECONDS ]; then
              echo "Error: Timeout after $TIMEOUT_SECONDS seconds. Codespace is still in state: $CODESPACE_STATE"
              ATTEMPT=$((ATTEMPT + 1))
              if [ $ATTEMPT -le $MAX_ATTEMPTS ]; then
                echo "Retrying entire process in 60 seconds..."
                sleep 60
              fi
              continue
            fi

            # Step 2: Restart Codespace
            RETRY_COUNT=0
            MAX_RETRIES=15
            until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
              START_OUTPUT=$(gh api -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                /user/codespaces/$CODESPACE_NAME/start 2>&1)
              START_STATUS=$?
              if [ $START_STATUS -eq 0 ]; then
                echo "Codespace $CODESPACE_NAME restart initiated successfully."
                break
              fi
              echo "Failed to restart Codespace $CODESPACE_NAME (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)."
              echo "Error details: $START_OUTPUT"
              if echo "$START_OUTPUT" | grep -q "HTTP 409" || echo "$START_OUTPUT" | grep -q "HTTP 5"; then
                echo "Retryable error detected. Retrying in 60 seconds..."
                sleep 60
              else
                echo "Non-retryable error: $START_OUTPUT"
                ATTEMPT=$((ATTEMPT + 1))
                if [ $ATTEMPT -le $MAX_ATTEMPTS ]; then
                  echo "Retrying entire process in 60 seconds..."
                  sleep 60
                fi
                break
              fi
              RETRY_COUNT=$((RETRY_COUNT + 1))
            done
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Failed to restart Codespace $CODESPACE_NAME after $MAX_RETRIES attempts."
              ATTEMPT=$((ATTEMPT + 1))
              if [ $ATTEMPT -le $MAX_ATTEMPTS ]; then
                echo "Retrying entire process in 60 seconds..."
                sleep 60
              fi
              continue
            fi

            # Step 3: Verify Codespace State
            echo "Waiting 120 seconds for Codespace to stabilize..."
            sleep 120
            echo "Fetching Codespace details..."
            CODESPACE_DETAILS=$(gh api /user/codespaces/$CODESPACE_NAME --jq '{state: .state, web_url: .web_url}')
            CODESPACE_STATE=$(echo "$CODESPACE_DETAILS" | jq -r '.state')
            CODESPACE_WEB_URL=$(echo "$CODESPACE_DETAILS" | jq -r '.web_url')
            echo "Codespace state: $CODESPACE_STATE"
            if [ "$CODESPACE_STATE" = "Available" ]; then
              echo "Codespace $CODESPACE_NAME is ready."
              echo "Open the Codespace in VS Code at: $CODESPACE_WEB_URL"
              echo "Then, check the Ports tab for the public URL of port 6200 (labeled 'VNC') to access the desktop GUI."
              echo "Verify the container setup by checking for mohamed.txt on the desktop in the VNC GUI."
              exit 0
            else
              echo "Error: Codespace $CODESPACE_NAME is not in Available state (Current state: $CODESPACE_STATE)."
              ATTEMPT=$((ATTEMPT + 1))
              if [ $ATTEMPT -le $MAX_ATTEMPTS ]; then
                echo "Retrying entire process in 60 seconds..."
                sleep 60
              fi
              continue
            fi
          done
          echo "Error: Failed to restart Codespace $CODESPACE_NAME after $MAX_ATTEMPTS attempts."
          echo "Attempting to trigger retry-restart-codespace workflow..."

          # Write client_payload to a temporary JSON file to ensure correct formatting
          echo "{\"event_type\": \"retry-restart-codespace\", \"client_payload\": {\"codespace_name\": \"$CODESPACE_NAME\"}}" > dispatch_payload.json

          # Retry dispatching the event
          DISPATCH_RETRIES=15
          DISPATCH_ATTEMPT=1
          until [ $DISPATCH_ATTEMPT -gt $DISPATCH_RETRIES ]; do
            echo "Dispatch attempt $DISPATCH_ATTEMPT of $DISPATCH_RETRIES at $(date -u '+%Y-%m-%d %H:%M:%S UTC')..."
            DISPATCH_OUTPUT=$(gh api -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.CODESPACE_PAT }}" \
              /repos/${{ github.repository }}/dispatches \
              --input dispatch_payload.json 2>&1)
            DISPATCH_STATUS=$?
            if [ $DISPATCH_STATUS -eq 0 ]; then
              echo "Successfully triggered retry-restart-codespace workflow."
              exit 1
            fi
            echo "Failed to trigger retry-restart-codespace workflow (Attempt $DISPATCH_ATTEMPT/$DISPATCH_RETRIES)."
            echo "Error details: $DISPATCH_OUTPUT"
            if [ $DISPATCH_ATTEMPT -lt $DISPATCH_RETRIES ]; then
              echo "Retrying dispatch in 60 seconds..."
              sleep 60
            fi
            DISPATCH_ATTEMPT=$((DISPATCH_ATTEMPT + 1))
          done

          # Final state check to avoid unnecessary exit if Codespace is now Available
          echo "Final check of Codespace $CODESPACE_NAME state..."
          CODESPACE_DETAILS=$(gh api /user/codespaces/$CODESPACE_NAME --jq '{state: .state, web_url: .web_url}' 2>&1)
          CODESPACE_STATUS=$?
          if [ $CODESPACE_STATUS -ne 0 ]; then
            echo "Error fetching final Codespace details: $CODESPACE_DETAILS"
            exit 1
          fi
          CODESPACE_STATE=$(echo "$CODESPACE_DETAILS" | jq -r '.state')
          CODESPACE_WEB_URL=$(echo "$CODESPACE_DETAILS" | jq -r '.web_url')
          echo "Codespace state: $CODESPACE_STATE"
          if [ "$CODESPACE_STATE" = "Available" ]; then
            echo "Codespace $CODESPACE_NAME is now Available. No further action needed."
            echo "Access it at: $CODESPACE_WEB_URL"
            exit 0
          else
            echo "Error: Failed to trigger retry-restart-codespace workflow after $DISPATCH_RETRIES attempts and Codespace is still not Available (state: $CODESPACE_STATE)."
            exit 1
          fi
